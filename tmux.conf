# Commands which make tmux work nicely with neovim
# Do not treat Escape as a prefix
set-option -sg escape-time 0

# Allow osc-52 copy and paste
set -s set-clipboard on

# C-p pastes from system clipboard if we are in neovim
# Otherwise, it just sends C-p (go to previous command)
bind-key -T root C-p run-shell "$HOME/.config/tmux/conditional_tmux_paste.sh"


# C-o is used to open a desired window
# The next keypress determines which window
# a = 1, s = 2, d = 3, f = 4 (moving down the home row)
bind-key -T root C-o switch-client -T window_selection
bind-key -T window_selection a select-window -t 0
bind-key -T window_selection s select-window -t 1
bind-key -T window_selection d select-window -t 2
bind-key -T window_selection f select-window -t 3
bind-key -T window_selection g select-window -t 4
bind-key -T window_selection h select-window -t 5
bind-key -T window_selection j select-window -t 6
bind-key -T window_selection k select-window -t 7
bind-key -T window_selection l select-window -t 8
bind-key -T window_selection ";" select-window -t 9


# Rename windows based on the active pane's current directory
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# Automatically re-number windows if one is deleted
set-option -g renumber-windows


# Toggle the status bar
bind-key c set -g status # c by default creates a new window

# Add a new window (default is c)
bind-key a new-window # a has no default binding

# Kill Current Window, (default is &)
bind-key e kill-window # e has no default binding

# Reload this config
bind-key & source-file ~/.config/tmux/tmux.conf

